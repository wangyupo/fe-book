(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{246:function(t,s,e){"use strict";e.r(s);var i=e(2),n=Object(i.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"css字体平滑"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css字体平滑","aria-hidden":"true"}},[t._v("#")]),t._v(" css字体平滑")]),t._v(" "),e("p",[t._v("在用 "),e("strong",[t._v("iview")]),t._v(" 开发的时候，发现去掉iview的css属性，网页的字体会 "),e("strong",[t._v("加粗")]),t._v(" ，无论怎么设置 "),e("strong",[t._v("font-weight")]),t._v(" 都无效。")]),t._v(" "),e("p",[t._v("后经对比，在取消iview.css前后，同一个font-weight:400显示不同的粗细。这是什么原因呢？")]),t._v(" "),e("p",[t._v("最后找到这么一个css属性—— "),e("code",[t._v("-webkit-font-smoothing:antialiased")]),t._v(" ,经查找，这个属性是“"),e("code",[t._v("对字体进行抗锯齿渲染从而使字体看起来会更清晰舒服")]),t._v("”。")]),t._v(" "),e("p",[t._v("结果去掉iview.css，并在body中加上 "),e("code",[t._v("-webkit-font-smoothing:antialiased")]),t._v(" ,字体的显示回归正常！")])])},[],!1,null,null,null);s.default=n.exports}}]);